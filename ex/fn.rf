// User functions

x = 11

(!x ? f : h)()                  // Call h() with no _extra_ output

f() + h()                       // Print result of f() + h() (132)

fn f {
    "call: f()"
    local y = x ** 2
    return x + y
}

if 1 {
    a = 0
    local f = fn () {
        "call: local f()"
        if !a++ f()             // Call global f()
    }
    f()                         // Call local f()

    a = 0
    local fn g {
        "call: local g()"
        (a++ ? f : g)()         // Call itself, then global f()
    }
    g()                         // Call local g()
}

fn g {
    "call: g()"
    return 3
}

fn h {
    "call: h()"
    return                      // NOTE: Empty return statement
}

a = 0
fv = fn() {
    "call: fv()"
    if !a++ fv()                // Call itself
}

fv()
