// Popcount
// Problem from an old homework where you calculate popcount using
// only bitwise ops and constants <= 255 (modified for 64 bit ints);
// Good way to test bitwise ops, compound assignment, and parentheses
// grouping
// x = 5 (0b101) -> 2
// x = 7 (0b111) -> 3

x = 0x7fffffffffffffff  // 63

m1  = 0x55
m1 |= m1 << 8
m1 |= m1 << 16
m1 |= m1 << 32

m2  = 0x33
m2 |= m2 << 8
m2 |= m2 << 16
m2 |= m2 << 32

m3  = 0x0f
m3 |= m3 << 8
m3 |= m3 << 16
m3 |= m3 << 32

x = (x & m1) + ((x >> 1) & m1)
x = (x & m2) + ((x >> 2) & m2)
x = (x & m3) + ((x >> 4) & m3)

x += x >> 8
x += x >> 16
x += x >> 32

x & 0x7f
